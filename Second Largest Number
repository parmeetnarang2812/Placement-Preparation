/*
Problem statement
You have been given an array ‘a’ of ‘n’ unique non-negative integers.
Find the second largest and second smallest element from the array.
Return the two elements (second largest and second smallest) as another array of size 2.

Example :
Input: ‘n’ = 5, ‘a’ = [1, 2, 3, 4, 5]
Output: [4, 2]
The second largest element after 5 is 4, and the second smallest element after 1 is 2.
*/

//Time Complexity: O(N), Single-pass solution
//Space Complexity: O(1)

public class Solution {
    public static int[] getSecondOrderElements(int n, int []a) {
        int[] arr = new int[2];
        int largest = Integer.MIN_VALUE, secondLargest = Integer.MIN_VALUE, smallest = Integer.MAX_VALUE, secondSmallest = Integer.MAX_VALUE;
        for(int i : a) {
            if(i > largest) {
                secondLargest = largest;
                largest = i;
            }
            else if(i > secondLargest && i != largest) {
                secondLargest = i;
            }
            if(i < smallest) {
                secondSmallest = smallest;
                smallest = i;
            }
            else if(secondSmallest > i && i != smallest) {
                secondSmallest = i;
            } 
        }
        arr[0] = secondLargest;
        arr[1] = secondSmallest;
        return arr;
    }
}
